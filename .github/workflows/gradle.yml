name: Java CI with Gradle

on:
  workflow_dispatch:
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: your-weather-github-actions-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: your-weather-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: your-weather-codedeploy-deployment-group

permissions:
  contents: read

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      # - name: Build with Gradle
      #   uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      #   with:
      #     gradle-version: 6.8.3 # Update to the desired Gradle version
      #     args: build -x test

      # 빌드 bash에서 직접하기      
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

  # AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # 빌드 결과물을 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: aws --region ap-northeast-2 s3 cp ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
      # run: |
      #   aws deploy push \
      #     --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
      #     --ignore-hidden-files \
      #     --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
      #     --source .

    # S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    # - name: Deploy to AWS EC2 from S3
    #   run: |
    #     aws deploy create-deployment \
    #       --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
    #       --deployment-config-name CodeDeployDefault.AllAtOnce \
    #       --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
    #       --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
